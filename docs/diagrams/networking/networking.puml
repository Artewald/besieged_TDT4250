@startuml
allow_mixing

package "networking" {
    ' interface DAO<K, T> {
    '     +get(id : Key) : Type
    '     +update(id : Key, object : Type) : boolean
    '     +delete(id : Key) : boolean
    '     +add(object : Type) : boolean
    ' }
    ' note left of DAO : follows DataBase Access\n Object pattern
    package persistence {

    }
    
    package messaging {

    }
}

package "game_client" {
    interface ClientMessagingController {
        +joinGame(gameID : UUID, playerID : UUID) : boolean
        +requestGameState(gameID : UUID) : Optional<GameState>
        +addAction(action : PlayerInput): void
        +getAllAvailableGames() : List<GameState>
        +getHighScores() : List<HighScore>
    }

    component "<<some other classes>>GameClient" as GameClient

    GameClient --> ClientMessagingController
}

package "game_server"{
    interface ServerMessagingController {
        +createGame(mapName : String): UUID
        +getGameState(gameID : UUID) : GameState
        +setGameState(UUID gameId, GameState gameState) : void
        +lookForPendingActions(playerId : UUID) : List<PlayerAction>
        +lookForPendingActions(gameId : UUID) : Optional<UUID>
        +removeGame(gameId : UUID) : void
        +updateHighScore(HighScore) : void
    }
    
    class GameState {

    }

    class HighScore {
        +gameID : UUID
        +waveNumber : int
    }

    class PlayerInput {
        +player : UUID
        +x : int
        +y : int
        +cardType : CardType
        +action : String
    }

    component "<<some other classes>>GameServer" as GameServer

    ServerMessagingController -left-> PlayerInput
    GameServer -> ServerMessagingController
    ServerMessagingController -> GameState
    ServerMessagingController -> HighScore
}

messaging -up-|> ClientMessagingController
messaging -left-|> ServerMessagingController 

ClientMessagingController -down-> PlayerInput
ClientMessagingController -down-> GameState
ClientMessagingController -down-> HighScore
'serverMessagingController -[hidden]right-> clientMessagingController

@enduml