@startuml
Actor Player as player
participant "GameClient\n(clientMessagingController)" as GameClient
participant "GameServer\n(serverMessagingController)" as GameServer

' Player initiates an action
activate player
player -> GameClient : Does an action

' GameClient sends action to GameServer
GameClient -> GameServer : addAction(gameID, playerID, action)

' Server processes action
activate GameServer
GameServer -> GameServer : setGameState(gameID, playerID, action)
deactivate GameServer
' Note on broadcasting to all clients
note right of GameServer: Game state updates.\nConnected clients continually ask for\nthe gamestate and display it to the player.

' Server broadcasts updated game state to all clients
GameClient -> GameServer : requestGameState(gameID)
activate GameClient

GameServer -> GameClient : current GameState
deactivate GameClient
GameClient -> player: Display current GameState



@enduml
